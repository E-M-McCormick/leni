% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/leni.R
\name{leni}
\alias{leni}
\alias{LENI}
\title{Linear Estimation with Nonlinear Inference for Regression and Mixed-Effects (Multilevel) Models}
\usage{
leni(
  model = NULL,
  target_fx = "quadratic",
  theta = c("a0", "ax", "ay"),
  bootstrap = FALSE,
  bootSeed = NULL,
  model.class = "lme",
  data = NULL,
  coef.idx = NULL,
  modx = NULL,
  modx.idx = NULL,
  varcov = TRUE,
  ci = 0.95,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{model}{The linear model object.}

\item{target_fx}{The target function, either "quadratic" or "cubic."}

\item{theta}{Vector of parameter names for the target function.
For quadratic choose three of: "a0", "ax", "ay", "g", "ac".
For cubic, choose four of: "xn", "yn", "d", "h", "bn".}

\item{bootstrap}{Boolean or numeric, indicating whether to perform bootstrap
estimation (default: FALSE; TRUE default: 5000 bootstrap samples).}

\item{bootSeed}{Seed for bootstrap sampling.}

\item{model.class}{The class of the linear model ("lm" or "lme").}

\item{data}{Raw data required for bootstrap results.}

\item{coef.idx}{Coefficient indices for fixed effects (default: 1:3 or 1:4).}

\item{modx}{Moderator variable for conditional effects.}

\item{modx.idx}{Moderator indices (default: first three/four coeffecients
with "modex" in parameter name).}

\item{varcov}{Boolean, whether to include random effects variances and covariances.
Only for \code{model.class = "lme"}.}

\item{ci}{Confidence level for interval estimation (default: 95\%).}

\item{verbose}{Boolean, whether to display additional messages.}

\item{...}{Additional arguments. Useful for passing options to the
bootstrap procedure (e.g., \code{sim = "parametric"}).}
}
\description{
Read in linear regression or mixed-effects (multilevel) model
output and generate nonlinear parameter estimates (and standard errors)
through a series of transformations. Analytic and bootstrap estimates
possible. Both main effects and interactions can be transformed. Addition
options can be passed to the bootstrap procedure.
}
\examples{
\dontrun{
leni_fit <- leni(model, target_fx = "quadratic", theta = c("a0","ax","ay"),
                 model.class = "lme", bootstrap = FALSE)}

}
